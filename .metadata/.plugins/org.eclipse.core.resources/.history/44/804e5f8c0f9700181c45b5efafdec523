package gui;
import java.awt.image.BufferedImage;
import java.io.*;
import javax.imageio.ImageIO;
import javax.imageio.spi.RegisterableService;;


public class convertArray {
	public String path;

	public convertArray(String path){
		path = this.path;
	}

	public  static void resultImage(BufferedImage image, int[] editedArray, BufferedImage editedImage) throws IOException {
		BufferedImage outputImage = new BufferedImage(image.getWidth(),image.getHeight(),BufferedImage.TYPE_INT_RGB);
		outputImage.setRGB(0, 0, image.getHeight(),image.getWidth(), editedArray, 0, image.getHeight());
		editedImage = outputImage;
		OutputStream output = new FileOutputStream("E:\\homework\\outImage.png");
		ImageIO.write(outputImage,"PNG",output);
	}


	public int[] RunConvert() throws IOException{
		BufferedImage image = ImageIO.read(new File("E:\\homework\\color\\Lenna.bmp"));

		int width = image.getWidth();
		int height = image.getHeight();

		int [] rgbArray = new int [width*height];
		image.getRGB(0, 0, width, height, rgbArray, 0, width);
		return rgbArray;
	}

	public static final int[] reverse(int[] arr) {
	    final int len = arr.length;
	    int tmp;
	    for (int i = 0; i < len / 2; i++) {
	        tmp = arr[i];
	        arr[i] = arr[len - 1 - i];
	        arr[len - 1 - i] = tmp;
	    }
	    return arr;
	}

	public static final int[] rot_1(int[] editedArray ,BufferedImage image, int[] rgbArray) {
		int w = 0;
		int x = 0;
		int y = 0;
			for (x = 0 ; x<image.getWidth();x++) {
				for(y = 0;y<image.getHeight();y++) {
					editedArray[w] = rgbArray[x+y*image.getWidth()];
					w++;
					}
				}
			return convertArray.reverse(editedArray);
}

	public static final int[] rot_2(int[] editedArray ,BufferedImage image, int[] rgbArray){
		int w = 0;
		int x = 0;
		int y = 0;
			for (y = image.getWidth()-1; y > 0;y--) {
				for(x = 0; x < image.getHeight();x++) {
					editedArray[w] = rgbArray[x+y*image.getWidth()];
					w++;
				}
			}

			int [] result_array = new int [image.getWidth()];
			return convertArray.rot_2(result_array, image, editedArray);

	}

	public static final int[] rev11(int[] rgbArray, BufferedImage image) {

		return convertArray.reverse(rgbArray);

	}

	public static final int[] rev01(int[] editedArray,int[] rgbArray, BufferedImage image) {
		int w = 0;
		int x = 0;
		int y = 0;
			for (y = 0; y < image.getHeight(); y++) {
				for(x = image.getHeight() - 1; x > 0 ;x--) {
					editedArray[w] = rgbArray[x+y*image.getWidth()];
					w++;
				}
			}
		return convertArray.reverse(rgbArray);

	}
}



